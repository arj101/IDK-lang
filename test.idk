class Point {

	Point(x, y) {
		this.x = x
		this.y = y
	}

	fun length(): sqrt(pow(this.x, 2) + pow(this.y, 2))

	fun distance(otherPt): sqrt(pow(this.x - otherPt.x, 2), pow(this.y - otherPt.y, 2))

}


class AdvancedPoint extends Point {
	AdvancedPoint(x, y) {
		this.Point(x, y)
	}

	fun aVeryAdvancedFunction() {
		this.x = this.x * (2 * random() - 1.0)
		this.y = this.y * (2 * random() - 1.0)
	}
}

let pt1 = new Point(3, 4)
let apt = new AdvancedPoint(2, 3)

pt1.length = fun (): pt1.x + pt1.y

println(pt1.length())
println(apt.length())

println(stringify(pt1))
println(stringify(apt))

apt.aVeryAdvancedFunction()

println(stringify(apt))